{"version":3,"sources":["component/Circle.js","component/GameOver.js","component/circles.js","sounds/Mario Coin Sound - Sound Effect (HD).mp3","sounds/Super Mario Bros. Music - Miss _ Game Over (1).mp3","App.js","index.js"],"names":["Circle","props","style","backgroundColor","color","pointerEvents","disabled","className","active","onClick","click","GameOver","score","close","circles","id","clickSound","Audio","gameOver","gameOverSound","getRndInteger","min","max","Math","floor","random","App","state","current","pace","rounds","gameStart","gameStop","timer","undefined","clickPlay","paused","play","currentTime","clickHandler","console","log","setState","stopHandler","nextCircle","nextActive","setTimeout","startHandler","clearTimeout","closeHandler","this","map","c","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4182551.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Circle = (props) => {\n    return (\n        <div\n            style={{\n                backgroundColor: props.color,\n                pointerEvents: props.disabled ? \"auto\" : \"none\",\n            }}\n            className={`circle ${props.active ? \"active\" : \"\"}`}\n            onClick={props.click}\n        ></div>\n    );\n};\n\nexport default Circle;\n","import React from \"react\";\n\nconst GameOver = (props) => {\n    return (\n        <div className=\"overlay\">\n            <div className=\"gamepopup\">\n                <h2>GAME OVER</h2>\n                <p> Score was: {props.score} </p>\n                <button onClick={props.close}>X</button>\n            </div>\n        </div>\n    );\n};\n\nexport default GameOver;\n","export const circles = [\n    { id: 1, color: \"#FD7272\" },\n    { id: 2, color: \"#3B3B98\" },\n    { id: 3, color: \"#ffdd59\" },\n    { id: 4, color: \"#0be881\" },\n];\n","export default __webpack_public_path__ + \"static/media/Mario Coin Sound - Sound Effect (HD).a8ce0352.mp3\";","export default __webpack_public_path__ + \"static/media/Super Mario Bros. Music - Miss _ Game Over (1).37591ed7.mp3\";","import React, { Component } from \"react\";\nimport Circle from \"./component/Circle\";\nimport GameOver from \"./component/GameOver.js\";\nimport { circles } from \"./component/circles\";\n\nimport click from \"./sounds/Mario Coin Sound - Sound Effect (HD).mp3\";\nimport gameOverSound from \"./sounds/Super Mario Bros. Music - Miss _ Game Over (1).mp3\";\n\n\nlet clickSound = new Audio(click);\nlet gameOver = new Audio(gameOverSound);\n\n\nconst getRndInteger = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nclass App extends Component {\n  state = {\n    score: 0,\n    current: 0,\n    gameOver: false,\n    pace: 1500,\n    rounds: 0,\n    gameStart: false,\n    gameStop:true,\n  };\n\n  timer = undefined;\n\n  clickPlay = () => {\n    if (clickSound.paused) {\n      clickSound.play();\n    } else {\n      clickSound.currentTime = 0;\n    }\n  };\n\n  clickHandler = (id) => {\n    this.clickPlay();\n\n    console.log(\"you clicked: \", id);\n\n    if (this.state.current !== id) {\n      this.stopHandler();\n      return;\n    }\n\n    this.setState({\n      score: this.state.score + 10,\n      rounds: 0,\n    });\n  };\n\n  nextCircle = () => {\n    if (this.state.rounds >= 5) {\n      this.stopHandler();\n      return;\n    }\n\n    let nextActive;\n\n    do {\n      nextActive = getRndInteger(1, 4);\n    } while (nextActive === this.state.current);\n\n    this.setState({\n      current: nextActive,\n      pace: this.state.pace * 0.95,\n      rounds: this.state.rounds + 1,\n    });\n\n    this.timer = setTimeout(this.nextCircle, this.state.pace);\n\n    console.log(\"active circle is \", this.state.current);\n    console.log(\"round number \", this.state.rounds);\n  };\n\n  startHandler = () => {\n\n      this.nextCircle();\n    this.setState({\n      gameStart: true,\n      gameStop:false,\n    });\n  };\n\n  stopHandler = () => {\n    clearTimeout(this.timer);\n    gameOver.play();\n\n    this.setState({\n      gameOver: true,\n      current: 0,\n      gameStart: false,\n      gameStop: true,\n    });\n  };\n\n  closeHandler = () => {\n    this.setState({\n      gameOver: false,\n      score: 0,\n      pace: 1500,\n      rounds: 0,\n    });\n  };\n\n  render() {\n    return (\n        <div>\n          {this.state.gameOver && (\n              <GameOver score={this.state.score} close={this.closeHandler} />\n          )}\n          <h1>Shoot the duck</h1>\n          <p>Your score: {this.state.score}</p>\n          <div className=\"circles\">\n            {circles.map((c) => (\n                <Circle\n                    key={c.id}\n                    color={c.color}\n                    id={c.id}\n                    click={() => this.clickHandler(c.id)}\n                    active={this.state.current === c.id}\n                    disabled={this.state.gameStart}\n                />\n            ))}\n          </div>\n          <div>\n            <button disabled={this.state.gameStart} onClick={this.startHandler}>\n              Start\n            </button>\n            <button onClick={this.state.gameStop}>Stop</button>\n            <footer className=\"footer\">&copy; Copyright 2021 Amrita Matta</footer>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}